"""
Задание 4.1

Используя подготовленную строку nat, получить новую строку, в которой
в имени интерфейса вместо FastEthernet написано GigabitEthernet.

Ограничение: Все задания надо выполнять используя только пройденные темы.

"""

nat = "ip nat inside source list ACL interface FastEthernet0/1 overload"
print(nat.replace('Fast', 'Gigabit'))


"""
Задание 4.2

Преобразовать строку mac из формата XXXX:XXXX:XXXX в формат XXXX.XXXX.XXXX

Ограничение: Все задания надо выполнять используя только пройденные темы.

"""

mac = "AAAA:BBBB:CCCC"
print(mac.replace(":","."))


"""
Задание 4.3

Получить из строки config такой список VLANов:
['1', '3', '10', '20', '30', '100']

Ограничение: Все задания надо выполнять используя только пройденные темы.

"""

config = "switchport trunk allowed vlan 1,3,10,20,30,100"
print(config.split()[-1].split(','))


"""
Задание 4.4

Список vlans это список VLANов, собранных со всех устройств сети,
поэтому в списке есть повторяющиеся номера VLAN.

Из списка нужно получить уникальный список VLANов,
отсортированный по возрастанию номеров. Для получения итогового списка нельзя удалять конкретные
vlanы вручную.

Ограничение: Все задания надо выполнять используя только пройденные темы.

"""

vlans = [10, 20, 30, 1, 2, 100, 10, 30, 3, 4, 10]
print(sorted(vlans))


"""
Задание 4.5

Из строк command1 и command2 получить список VLANов,
которые есть и в команде command1 и в команде command2 (пересечение).

Результатом должен быть такой список: ['1', '3', '8']

Ограничение: Все задания надо выполнять используя только пройденные темы.

"""

command1 = "switchport trunk allowed vlan 1,2,3,5,8"
command2 = "switchport trunk allowed vlan 1,3,8,9"

command1 = command1.split()[-1].split(',')
command2 = command2.split()[-1].split(',')
set1 = set(command1) #set-множество
set2 = set(command2)
setall = set1.intersection(set2)
vlans = list(setall)
vlans = sorted(vlans)
print(vlans)


"""
Задание 4.6

Обработать строку ospf_route и вывести информацию на стандартный поток вывода в виде:
Prefix                10.0.24.0/24
AD/Metric             110/41
Next-Hop              10.0.13.3
Last update           3d18h
Outbound Interface    FastEthernet0/0

Ограничение: Все задания надо выполнять используя только пройденные темы.

"""

ospf_route = "      10.0.24.0/24 [110/41] via 10.0.13.3, 3d18h, FastEthernet0/0"
str = 'Prefix                {}\nAD/Metric             {}\nNext-Hop              {}\nLast update           {}\nOutbound Interface    {}'

ospf = ospf_route.split()

prefix = ospf[0]
ad = ospf[1]
hop = ospf[3]
update = ospf[4]
interface = ospf[5]

ad = ad.strip('[]')
hop = hop.rstrip(',')
update = update.rstrip(',')



print(str.format(prefix,ad,hop, update,interface))


"""
Задание 4.7

Преобразовать MAC-адрес в строке mac в двоичную строку такого вида:
'101010101010101010111011101110111100110011001100'

Ограничение: Все задания надо выполнять используя только пройденные темы.

"""

mac = "AAAA:BBBB:CCCC"
mac = mac.replace(':','')
mac = int(mac, 16)
mac = bin(mac)
mac = mac[2:]
print(mac)


"""
Задание 4.8

Преобразовать IP-адрес в переменной ip в двоичный формат и вывести на стандартный поток вывода вывод столбцами, таким образом:

- первой строкой должны идти десятичные значения байтов
- второй строкой двоичные значения

Вывод должен быть упорядочен также, как в примере:
- столбцами
- ширина столбца 10 символов (в двоичном формате надо добавить два пробела между столбцами)

Пример вывода для адреса 10.1.1.1:
10        1         1         1
00001010  00000001  00000001  00000001

Ограничение: Все задания надо выполнять используя только пройденные темы.

"""

ip = "192.168.3.1"
ip = '''
{0:<10} {1:<10} {2:<10} {3:<10}
{0:09b} {1:09b} {2:09b} {3:09b}
'''
print(ip.format(192, 168, 3, 1))
